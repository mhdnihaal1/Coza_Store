<% include('../layouts/header.ejs') %>

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Add Category</title>
<style>
  body {
    font-family: "Arial", sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f8f8f8;
  }
  body {
    /* background: url('https://source.unsplash.com/random/1920x1080') no-repeat center center fixed; */
    background-size: cover;
    height: 100vh;
    margin: 0;
    font-family: "Arial", sans-serif;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .container {
    max-width: 600px;
    margin: 50px auto;
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }

  h1 {
    text-align: center;
    color: #333;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  label {
    font-weight: bold;
    margin-bottom: 8px;
    color: #333;
  }

  input {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  button {
    padding: 12px;
    background-color: #4caf50;
    color: #fff;
    border: none;
    cursor: pointer;
    border-radius: 4px;
    transition: background-color 0.3s;
  }

  button:hover {
    background-color: #45a049;
  }
  body {
    background-image: url("/adminAsset/vendor/src/assets/images/backgrounds/bg2.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    height: 100vh;
    margin: 0;
    font-family: "Arial", sans-serif;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .content-container {
    background-color: rgba(255, 255, 255, 0.9);
    border: 1px solid #ccc;
    border-radius: 5px;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    padding: 30px; /* Increased padding for better spacing */
    max-width: 400px; /* Increased max-width for better responsiveness */
    width: 100%;
    text-align: center;
  }

  form {
    max-width: 300px;
    margin: 20px auto;
    text-align: center;
  }

  input {
    width: 100%;
    padding: 15px; /* Increased padding for input fields */
    margin-bottom: 20px; /* Increased margin for better spacing */
    box-sizing: border-box;
    border: 2px solid #6c757d; /* Slightly thicker border */
    border-radius: 8px; /* Rounded corners for form elements */
  }

  input[type="submit"] {
    background-color: #1aff00;
    border: 2px solid #1aff00;
    border-radius: 8px;
    color: #fff;
    cursor: pointer;
    transition: background-color 0.3s ease; /* Smooth transition on background color change */
  }

  input[type="submit"]:hover {
    background-color: #00cc00;
  }

  h1,
  p.success-message {
    text-align: center;
    color: #333;
    margin-top: 20px;
  }

  p.success-message {
    color: green;
    margin-top: 20px;
  }
</style>

<body>
  <div class="col-md-6 mx-auto">
    <div class="content-container">
      <h1>Add Category</h1>
      <a href="category">
        <span>
          <button>Go to categories</button>
        </span>
      </a>

      <form action="/addcategory" method="post">
        <label for="categoryName1" name="category1">Existing category :</label>
        <input type="text" id="categoryName1" name="categoryName1" required />

        <!-- <label for="categoryName" name="category">Existing category :</label>
        <select id="categoryId" name="categoryName">
          <option value="">Select Category</option>
          <% Category.forEach(category => { %>
          <option value="<%= category.category %>">
            <%= category.category %>
          </option>
          <% }); %>
        </select> -->
        <div id="message"></div>
        <button type="button" class="btn btnaction" id="submitcategory">
          Submit
        </button>
      </form>

      <% if (typeof message !== 'undefined') { %>
      <p class="success-message"><%= message %></p>
      <% } %>
    </div>
  </div>
</body>
<script>
   document.addEventListener("DOMContentLoaded", function() {
    document.getElementById("submitcategory").addEventListener("click", function () {
        const categoryName = document.getElementById("categoryName1").value; 



  

 
    });
});
  document.addEventListener("DOMContentLoaded", function() {
    document.getElementById("submitcategory").addEventListener("click", function () {
      const categoryName1 = document.getElementById("categoryName1").value;

      // const lowercaseCategoryName = categoryName1.toLowerCase();
      //   const uppercaseCategoryName = categoryName1.toUpperCase();
      // console.log(categoryName1);

      // const categoryExists = existingCategoryNames.some(existingName => 
      //       existingName.toLowerCase() === lowercaseCategoryName || existingName.toUpperCase() === uppercaseCategoryName
      //   );
  
      if (categoryName1) {
            console.log("Category with the same name already exists.");
            checkCategoryExists(categoryName1);
        } else {
            console.log("Category does not exist. Proceed with adding it.");
        }
    });
  });
</script>

<script>

  async function checkCategoryExists(categoryName1) {
    try {
      const response = await fetch("/addcategory", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ categoryName1 }), // Correctly stringify the category name
      });

      if (response.ok) {
            const responseData = await response.json();
            if (responseData.ok) {
                alert(responseData.message);
                // Redirect to the OTP generation page or dashboard
                // window.location.href = "/category"; // Change "/otpGenerator" to the path of your desired page
            } else {
                document.getElementById('message').textContent = responseData.message;
                // window.location.href = "/category"; // Change "/otpGenerator" to the path of your desired page

            }
            
        } else {
            const errorData = await response.json();
            document.getElementById('message').textContent = errorData.message || 'An error occurred.';
        }

    } catch (error) {
      const errorData = await response.json();
            document.getElementById('message').textContent = errorData.message || 'An error occurred.';
    }
  }
</script>

<% include('../layouts/footer.ejs') %>
